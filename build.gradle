plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.50'
    id 'org.hidetake.ssh' version '2.1.0'
}

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/ktor' }
    maven { url "https://dl.bintray.com/mrasterisco/Maven" }
}
kotlin {
    // For ARM, should be changed to iosArm32 or iosArm64
    // For Linux, should be changed to e.g. linuxX64
    // For MacOS, should be changed to e.g. macosX64
    // For Windows, should be changed to e.g. mingwX64

    def klockVersion = "1.6.2"
    def ktor_version = "1.2.1"

    macosX64("macos") {
        binaries {
            executable {
                // Change to specify fully qualified name of your application's entry point:
               entryPoint = 'sample.main'
                // Specify command-line arguments, if necessary:
                runTask?.args('')
            }
        }

    }

    linuxArm32Hfp("raspberry") {
        binaries {
            executable {
                // Change to specify fully qualified name of your application's entry point:
                entryPoint = 'sample.main'
                // Specify command-line arguments, if necessary:
                runTask?.args('')

                compilations.main.cinterops {
                    pigpio {
                        includeDirs 'src/include/pigpio'
                    }
                    pca9685 {
                        includeDirs 'src/include/pca9685'
                    }
                    tflite {
                        includeDirs 'src/include/tflite'
                    }
                }
                // libpigpio.so are compiled on raspberry pi and copied here
                linkerOpts '-lpigpio -Lsrc/include/pigpio'

                // libPCA9685.so are compiled on raspberry pi and copied here
                linkerOpts '-lPCA9685 -Lsrc/include/pca9685'

                // libtensorflow-lite.a is compiled on a Linux machine and copied herer
                linkerOpts '-ltensorflow-lite -Lsrc/include/tflite'

            }
        }
    }

    sourceSets {

        commonMain.dependencies {
            implementation 'org.jetbrains.kotlin:kotlin-stdlib-common:1.3.31'
            implementation 'com.soywiz.korlibs.klock:klock:${klockVersion}'
        }

        raspberryMain {
        }
        raspberryTest {
        }
        macosMain {
        }
        macosTest {
        }
        macos.dependsOn(commonMain)
        raspberryMain.dependsOn(commonMain)

        serverMain {
            dependencies {
                implementation("io.ktor:ktor-server-core:$ktor_version")
                implementation("io.ktor:ktor-server-netty:$ktor_version")
            }
        }
    }
}

remotes {
    pi {
        host = '192.168.1.98'
        user = 'pi'
        identity = file('/Users/qian/.ssh/id_rsa')
    }
}

task deployOnPi {
    doLast {
        ssh.run {
            session(remotes.pi) {
                def sourceFile = "$buildDir/bin/chifumi/mainDebugExecutable/main.kexe"
                def destinationDir = "/home/pi/qian/playground"

                put from: sourceFile, into: destinationDir
            }
        }
    }
}

// Use the following Gradle tasks to run your application:
// :runReleaseExecutableMacos - without debug symbols
// :runDebugExecutableMacos - with debug symbols